{"version":3,"sources":["hardhat.config.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,+BAAiC;AAEjC,yCAAyD;AACzD,wCAAsC;AACtC,qCAAmC;AACnC,8BAA4B;AAC5B,gCAA8B;AAC9B,6BAA2B;AAE3B,MAAM,CAAC,MAAM,EAAE,CAAC;AAEhB,uEAAuE;AACvE,8CAA8C;AAC9C,aAAI,CAAC,UAAU,EAAE,6BAA6B,EAAE,UAAO,QAAQ,EAAE,GAAG;;;;oBACjD,qBAAM,GAAG,CAAC,MAAM,CAAC,UAAU,EAAE,EAAA;;gBAAxC,QAAQ,GAAG,SAA6B;gBAE9C,WAA8B,EAAR,qBAAQ,EAAR,sBAAQ,EAAR,IAAQ,EAAE;oBAArB,OAAO;oBAChB,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;iBAC9B;;;;KACF,CAAC,CAAC;AAEH,qDAAqD;AACrD,kDAAkD;AAElD,IAAM,MAAM,GAAsB;IAChC,QAAQ,EAAE,QAAQ;IAClB,QAAQ,EAAE;QACR,OAAO,EAAE;YACP,GAAG,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,IAAI,EAAE;YAClC,QAAQ,EACN,OAAO,CAAC,GAAG,CAAC,WAAW,KAAK,SAAS,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,EAAE;SACzE;KACF;IACD,WAAW,EAAE;QACX,OAAO,EAAE,OAAO,CAAC,GAAG,CAAC,UAAU,KAAK,SAAS;QAC7C,QAAQ,EAAE,KAAK;KAChB;IACD,SAAS,EAAE;QACT,MAAM,EAAE,OAAO,CAAC,GAAG,CAAC,iBAAiB;KACtC;CACF,CAAC;AAEF,qBAAe,MAAM,CAAC","file":"hardhat.config.js","sourcesContent":["import * as dotenv from \"dotenv\";\n\nimport { HardhatUserConfig, task } from \"hardhat/config\";\nimport \"@nomiclabs/hardhat-etherscan\";\nimport \"@nomiclabs/hardhat-waffle\";\nimport \"@typechain/hardhat\";\nimport \"hardhat-gas-reporter\";\nimport \"solidity-coverage\";\n\ndotenv.config();\n\n// This is a sample Hardhat task. To learn how to create your own go to\n// https://hardhat.org/guides/create-task.html\ntask(\"accounts\", \"Prints the list of accounts\", async (taskArgs, hre) => {\n  const accounts = await hre.ethers.getSigners();\n\n  for (const account of accounts) {\n    console.log(account.address);\n  }\n});\n\n// You need to export an object to set up your config\n// Go to https://hardhat.org/config/ to learn more\n\nconst config: HardhatUserConfig = {\n  solidity: \"0.8.11\",\n  networks: {\n    ropsten: {\n      url: process.env.ROPSTEN_URL || \"\",\n      accounts:\n        process.env.PRIVATE_KEY !== undefined ? [process.env.PRIVATE_KEY] : [],\n    },\n  },\n  gasReporter: {\n    enabled: process.env.REPORT_GAS !== undefined,\n    currency: \"USD\",\n  },\n  etherscan: {\n    apiKey: process.env.ETHERSCAN_API_KEY,\n  },\n};\n\nexport default config;\n"]}